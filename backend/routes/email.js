const express = require("express");
const nodemailer = require("nodemailer");
const router = express.Router();

// Email configuration
const EMAIL_HOST = process.env.EMAIL_HOST || "smtp.gmail.com";
const EMAIL_PORT = process.env.EMAIL_PORT || 587;
const EMAIL_USER = process.env.EMAIL_USER;
const EMAIL_PASS = process.env.EMAIL_PASS;

// Create email transporter
let transporter = null;
if (EMAIL_USER && EMAIL_PASS) {
  transporter = nodemailer.createTransport({
    host: EMAIL_HOST,
    port: EMAIL_PORT,
    secure: false, // true for 465, false for other ports
    auth: {
      user: EMAIL_USER,
      pass: EMAIL_PASS,
    },
  });
}

// Generate HTML email content
function generateEmailHTML(profile) {
  const categoryIcons = {
    music: "üéµ",
    books: "üìö",
    travel: "‚úàÔ∏è",
    fashion: "üëó",
    food: "üçΩÔ∏è",
  };

  return `
    <!DOCTYPE html>
    <html>
    <head>
      <meta charset="utf-8">
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <title>Your CulturalDNA Profile</title>
      <style>
        body {
          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
          line-height: 1.6;
          color: #333;
          max-width: 600px;
          margin: 0 auto;
          padding: 20px;
          background-color: #f8fafc;
        }
        .header {
          text-align: center;
          background: linear-gradient(135deg, #0ea5e9 0%, #d946ef 100%);
          color: white;
          padding: 40px 20px;
          border-radius: 16px;
          margin-bottom: 30px;
        }
        .profile-type {
          font-size: 28px;
          font-weight: bold;
          margin-bottom: 10px;
        }
        .tagline {
          font-size: 18px;
          opacity: 0.9;
        }
        .section {
          background: white;
          padding: 25px;
          border-radius: 12px;
          margin-bottom: 20px;
          box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }
        .section-title {
          font-size: 20px;
          font-weight: bold;
          margin-bottom: 15px;
          color: #0ea5e9;
        }
        .insight {
          background: #f0f9ff;
          padding: 15px;
          border-radius: 8px;
          margin-bottom: 10px;
          border-left: 4px solid #0ea5e9;
        }
        .recommendations-grid {
          display: grid;
          grid-template-columns: 1fr 1fr;
          gap: 15px;
        }
        .category {
          background: #f8fafc;
          padding: 15px;
          border-radius: 8px;
        }
        .category-title {
          font-weight: bold;
          margin-bottom: 10px;
          display: flex;
          align-items: center;
        }
        .category-icon {
          margin-right: 8px;
          font-size: 18px;
        }
        .recommendation-item {
          padding: 5px 0;
          border-bottom: 1px solid #e2e8f0;
        }
        .recommendation-item:last-child {
          border-bottom: none;
        }
        .footer {
          text-align: center;
          margin-top: 30px;
          padding: 20px;
          background: white;
          border-radius: 12px;
          color: #666;
        }
        @media (max-width: 600px) {
          .recommendations-grid {
            grid-template-columns: 1fr;
          }
        }
      </style>
    </head>
    <body>
      <div class="header">
        <div class="profile-type">${profile.type}</div>
        <div class="tagline">${profile.tagline}</div>
      </div>

      <div class="section">
        <div class="section-title">About Your Cultural DNA</div>
        <p>${profile.description}</p>
      </div>

      <div class="section">
        <div class="section-title">Cultural Insights</div>
        ${profile.insights
          .map(
            (insight) => `
          <div class="insight">${insight}</div>
        `
          )
          .join("")}
      </div>

      <div class="section">
        <div class="section-title">Personalized Recommendations</div>
        <div class="recommendations-grid">
          ${Object.entries(profile.recommendations)
            .map(
              ([category, items]) => `
            <div class="category">
              <div class="category-title">
                <span class="category-icon">${categoryIcons[category]}</span>
                ${category.charAt(0).toUpperCase() + category.slice(1)}
              </div>
              ${items
                .map(
                  (item) => `
                <div class="recommendation-item">‚Ä¢ ${item}</div>
              `
                )
                .join("")}
            </div>
          `
            )
            .join("")}
        </div>
      </div>

      <div class="footer">
        <p>Generated by CulturalDNA</p>
        <p>Discover your cultural personality at <a href="http://localhost:3000">CulturalDNA.com</a></p>
      </div>
    </body>
    </html>
  `;
}

// Send business report via email endpoint
router.post("/send-report", async (req, res) => {
  try {
    const { email, report, reportType } = req.body;

    // Validate input
    if (!email || !report) {
      return res.status(400).json({ error: "Email and report are required" });
    }

    // Validate email format
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    if (!emailRegex.test(email)) {
      return res.status(400).json({ error: "Invalid email format" });
    }

    // Check if email service is configured
    if (!transporter) {
      return res.status(503).json({
        error: "Email service not configured",
        message: "Please configure email settings in environment variables",
      });
    }

    // Generate email content based on report type
    const htmlContent = generateBusinessReportHTML(report, reportType);

    // Send email
    const mailOptions = {
      from: `"CultureSense" <${EMAIL_USER}>`,
      to: email,
      subject: `CultureSense Business Report: ${
        reportType || "Cultural Intelligence Analysis"
      }`,
      html: htmlContent,
      text: generateBusinessReportText(report, reportType),
    };

    await transporter.sendMail(mailOptions);

    console.log(`Business report sent to ${email}`);
    res.json({
      success: true,
      message: "Business report sent successfully",
    });
  } catch (error) {
    console.error("Email sending error:", error);
    res.status(500).json({
      error: "Failed to send email",
      message: error.message,
    });
  }
});

// Legacy endpoint for backward compatibility
router.post("/send-profile", async (req, res) => {
  try {
    const { email, profile } = req.body;

    // Validate input
    if (!email || !profile) {
      return res.status(400).json({ error: "Email and profile are required" });
    }

    // Validate email format
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    if (!emailRegex.test(email)) {
      return res.status(400).json({ error: "Invalid email format" });
    }

    // Check if email service is configured
    if (!transporter) {
      return res.status(503).json({
        error: "Email service not configured",
        message: "Please configure email settings in environment variables",
      });
    }

    // Generate email content
    const htmlContent = generateEmailHTML(profile);

    // Send email
    const mailOptions = {
      from: `"CultureSense" <${EMAIL_USER}>`,
      to: email,
      subject: `Your CultureSense Profile: ${profile.type}`,
      html: htmlContent,
      text: `
Your CultureSense Profile: ${profile.type}

${profile.tagline}

About Your Cultural DNA:
${profile.description}

Cultural Insights:
${profile.insights.map((insight) => `‚Ä¢ ${insight}`).join("\n")}

Personalized Recommendations:
${Object.entries(profile.recommendations)
  .map(
    ([category, items]) =>
      `${category.charAt(0).toUpperCase() + category.slice(1)}:\n${items
        .map((item) => `  ‚Ä¢ ${item}`)
        .join("\n")}`
  )
  .join("\n\n")}

Generated by CultureSense
Visit us at http://localhost:3000
      `.trim(),
    };

    await transporter.sendMail(mailOptions);

    console.log(`Profile sent to ${email}`);
    res.json({
      success: true,
      message: "Profile sent successfully",
    });
  } catch (error) {
    console.error("Email sending error:", error);
    res.status(500).json({
      error: "Failed to send email",
      message: error.message,
    });
  }
});

// Generate HTML email content for business reports
function generateBusinessReportHTML(report, reportType) {
  const reportTitle = reportType || "Cultural Intelligence Analysis";

  return `
    <!DOCTYPE html>
    <html>
    <head>
      <meta charset="utf-8">
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <title>CultureSense Business Report</title>
      <style>
        body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; max-width: 700px; margin: 0 auto; padding: 20px; }
        .header { background: linear-gradient(135deg, #0ea5e9 0%, #7c3aed 100%); color: white; padding: 30px; text-align: center; border-radius: 10px 10px 0 0; }
        .content { background: white; padding: 30px; border-radius: 0 0 10px 10px; box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); }
        .report-title { font-size: 28px; font-weight: bold; margin-bottom: 10px; }
        .subtitle { font-size: 16px; opacity: 0.9; margin-bottom: 20px; }
        .section { margin-bottom: 30px; }
        .section-title { font-size: 20px; font-weight: bold; color: #0ea5e9; margin-bottom: 15px; border-bottom: 2px solid #e5e7eb; padding-bottom: 8px; }
        .summary { background: #f8fafc; padding: 20px; border-radius: 8px; border-left: 4px solid #0ea5e9; margin-bottom: 20px; }
        .trend-item { background: #f0f9ff; padding: 15px; margin: 10px 0; border-radius: 8px; border-left: 4px solid #7c3aed; }
        .trend-header { display: flex; justify-content: space-between; align-items: center; margin-bottom: 10px; }
        .trend-domain { font-weight: bold; color: #374151; }
        .trend-percentage { font-weight: bold; color: #059669; }
        .insight-list { margin: 10px 0; }
        .insight-item { margin: 5px 0; }
        .recommendation { background: #fef3c7; padding: 12px; margin: 8px 0; border-radius: 6px; border-left: 4px solid #f59e0b; }
        .footer { text-align: center; margin-top: 30px; padding-top: 20px; border-top: 1px solid #e5e7eb; color: #6b7280; font-size: 14px; }
        .metadata { background: #f9fafb; padding: 15px; border-radius: 8px; margin-top: 20px; font-size: 12px; color: #6b7280; }
      </style>
    </head>
    <body>
      <div class="header">
        <div class="report-title">${reportTitle}</div>
        <div class="subtitle">AI-Powered Cultural Intelligence for Business</div>
      </div>
      <div class="content">
        ${
          report.summary
            ? `
          <div class="section">
            <div class="section-title">Executive Summary</div>
            <div class="summary">${report.summary}</div>
          </div>
        `
            : ""
        }
        
        ${
          report.trends
            ? `
          <div class="section">
            <div class="section-title">Cultural Trends Analysis</div>
            ${report.trends
              .map(
                (trend) => `
              <div class="trend-item">
                <div class="trend-header">
                  <span class="trend-domain">${trend.domain}</span>
                  <span class="trend-percentage">${trend.trend} ${
                  trend.direction
                }</span>
                </div>
                <div class="insight-list">
                  <strong>Key Insights:</strong>
                  ${
                    trend.key_insights
                      ? trend.key_insights
                          .map(
                            (insight) =>
                              `<div class="insight-item">‚Ä¢ ${insight}</div>`
                          )
                          .join("")
                      : ""
                  }
                </div>
                <div class="insight-list">
                  <strong>Business Implications:</strong>
                  ${
                    trend.business_implications
                      ? trend.business_implications
                          .map(
                            (implication) =>
                              `<div class="insight-item">‚Ä¢ ${implication}</div>`
                          )
                          .join("")
                      : ""
                  }
                </div>
              </div>
            `
              )
              .join("")}
          </div>
        `
            : ""
        }
        
        ${
          report.cross_domain_patterns
            ? `
          <div class="section">
            <div class="section-title">Cross-Domain Patterns</div>
            ${report.cross_domain_patterns
              .map(
                (pattern) => `
              <div class="trend-item">
                <div class="trend-header">
                  <span class="trend-domain">${pattern.pattern}</span>
                  <span class="trend-percentage">${pattern.strength}%</span>
                </div>
                <div class="insight-item"><strong>Business Opportunity:</strong> ${pattern.business_opportunity}</div>
              </div>
            `
              )
              .join("")}
          </div>
        `
            : ""
        }
        
        ${
          report.market_recommendations
            ? `
          <div class="section">
            <div class="section-title">Market Recommendations</div>
            ${report.market_recommendations
              .map((rec) => `<div class="recommendation">‚Ä¢ ${rec}</div>`)
              .join("")}
          </div>
        `
            : ""
        }
        
        ${
          report.analysis_metadata
            ? `
          <div class="metadata">
            <strong>Analysis Details:</strong><br>
            Domains: ${
              report.analysis_metadata.domains
                ? report.analysis_metadata.domains.join(", ")
                : "N/A"
            }<br>
            Generated: ${
              report.analysis_metadata.generated_at
                ? new Date(
                    report.analysis_metadata.generated_at
                  ).toLocaleString()
                : "N/A"
            }
          </div>
        `
            : ""
        }
        
        <div class="footer">
          Generated by CultureSense<br>
          <a href="http://localhost:3000" style="color: #0ea5e9;">Access Business Intelligence Dashboard</a>
        </div>
      </div>
    </body>
    </html>
  `;
}

// Generate text email content for business reports
function generateBusinessReportText(report, reportType) {
  const reportTitle = reportType || "Cultural Intelligence Analysis";

  let text = `
${reportTitle}
=====================================

Generated by CultureSense - AI-Powered Cultural Intelligence for Business

`;

  if (report.summary) {
    text += `
EXECUTIVE SUMMARY
================
${report.summary}

`;
  }

  if (report.trends) {
    text += `
CULTURAL TRENDS ANALYSIS
=======================
`;
    report.trends.forEach((trend) => {
      text += `
${trend.domain.toUpperCase()}: ${trend.trend} ${trend.direction}

Key Insights:
${
  trend.key_insights
    ? trend.key_insights.map((insight) => `‚Ä¢ ${insight}`).join("\n")
    : ""
}

Business Implications:
${
  trend.business_implications
    ? trend.business_implications
        .map((implication) => `‚Ä¢ ${implication}`)
        .join("\n")
    : ""
}

`;
    });
  }

  if (report.cross_domain_patterns) {
    text += `
CROSS-DOMAIN PATTERNS
====================
`;
    report.cross_domain_patterns.forEach((pattern) => {
      text += `
${pattern.pattern} (${pattern.strength}%)
Business Opportunity: ${pattern.business_opportunity}

`;
    });
  }

  if (report.market_recommendations) {
    text += `
MARKET RECOMMENDATIONS
=====================
${report.market_recommendations.map((rec) => `‚Ä¢ ${rec}`).join("\n")}

`;
  }

  if (report.analysis_metadata) {
    text += `
ANALYSIS DETAILS
================
Domains: ${
      report.analysis_metadata.domains
        ? report.analysis_metadata.domains.join(", ")
        : "N/A"
    }
Generated: ${
      report.analysis_metadata.generated_at
        ? new Date(report.analysis_metadata.generated_at).toLocaleString()
        : "N/A"
    }

`;
  }

  text += `
=====================================
Generated by CultureSense
Visit: http://localhost:3000
`;

  return text;
}

module.exports = router;
